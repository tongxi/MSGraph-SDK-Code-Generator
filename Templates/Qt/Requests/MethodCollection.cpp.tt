<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedQt.template.tt"#>

<#
var func = host.CurrentType.AsOdcmMethod();
var paramList = func.ReturnType.AsOdcmClass().Properties.Where(prop=> !prop.IsCollection);
var collectionName = writer.GetPrefix() + func.Class.Name.ToUpperFirstChar() + func.Name.Substring(func.Name.IndexOf('.') + 1).ToUpperFirstChar() + "Collection";
#>

#include "<#=collectionName#>.h"

void <#=collectionName#>::read(const QJsonObject& json)
{
    <#=TypeCollectionResponse(writer, func.ReturnType)#>::read(json);
<#    foreach(var param in paramList)
{
    var paramName = param.Name.Substring(param.Name.IndexOf(".") + 1);
    if(param.IsComplex() && !param.IsSystem() && !param.IsCollection())
    {        
#>
    m<#=param.GetToUpperFirstCharName()#>.read(json["<#=param.Name#>"].toObject());
<#  } else if (!param.IsCollection()) {
    var readFrom = "json[\"" + param.Name + "\"]";
#>
    m<#=param.GetToUpperFirstCharName()#> = <#=param.GetQTJsonParserConverterFunction(readFrom)#>;
<#  }
}
#>

}
